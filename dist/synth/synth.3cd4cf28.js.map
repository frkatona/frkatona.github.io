{"mappings":"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","sources":["synth/synth.js"],"sourcesContent":["const frequencyInput = document.getElementById(\"frequency\");\r\nconst frequencyValue = document.getElementById(\"frequency-value\");\r\n\r\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\nconst oscillator = audioContext.createOscillator();\r\nconst gainNode = audioContext.createGain();\r\n\r\noscillator.type = \"sine\";\r\noscillator.frequency.value = frequencyInput.value;\r\ngainNode.gain.value = 0;\r\n\r\noscillator.connect(gainNode);\r\ngainNode.connect(audioContext.destination);\r\n\r\noscillator.start();\r\n\r\nfunction updateFrequency() {\r\n    frequencyValue.textContent = frequencyInput.value;\r\n    oscillator.frequency.value = frequencyInput.value;\r\n}\r\n\r\nconst volumeInput = document.getElementById(\"volume\");\r\nconst volumeValue = document.getElementById(\"volume-value\");\r\n\r\n// Initialize gain value\r\ngainNode.gain.value = volumeInput.value;\r\n\r\nfunction updateVolume() {\r\n    volumeValue.textContent = Math.round(volumeInput.value * 100);\r\n}\r\n\r\nconst oscilloscopeCanvas = document.getElementById(\"oscilloscope\");\r\nconst oscilloscopeContext = oscilloscopeCanvas.getContext(\"2d\");\r\n\r\nconst analyzer = audioContext.createAnalyser();\r\nanalyzer.fftSize = 2048;\r\nconst bufferLength = analyzer.frequencyBinCount;\r\nconst dataArray = new Uint8Array(bufferLength);\r\n\r\ngainNode.connect(analyzer);\r\n\r\nfunction drawOscilloscope() {\r\n    requestAnimationFrame(drawOscilloscope);\r\n\r\n    analyzer.getByteTimeDomainData(dataArray);\r\n\r\n    oscilloscopeContext.fillStyle = \"rgb(255, 255, 255)\";\r\n    oscilloscopeContext.fillRect(0, 0, oscilloscopeCanvas.width, oscilloscopeCanvas.height);\r\n\r\n    oscilloscopeContext.lineWidth = 2;\r\n    oscilloscopeContext.strokeStyle = \"rgb(0, 0, 0)\";\r\n\r\n    oscilloscopeContext.beginPath();\r\n    const sliceWidth = oscilloscopeCanvas.width * 1.0 / bufferLength;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n        const v = dataArray[i] / 128.0;\r\n        const y = v * oscilloscopeCanvas.height / 2;\r\n\r\n        if (i === 0) {\r\n            oscilloscopeContext.moveTo(x, y);\r\n        } else {\r\n            oscilloscopeContext.lineTo(x, y);\r\n        }\r\n\r\n        x += sliceWidth;\r\n    }\r\n\r\n    oscilloscopeContext.lineTo(oscilloscopeCanvas.width, oscilloscopeCanvas.height / 2);\r\n    oscilloscopeContext.stroke();\r\n}\r\n\r\ndrawOscilloscope();\r\n\r\nvolumeInput.addEventListener(\"input\", updateVolume);\r\n\r\nfrequencyInput.addEventListener(\"input\", updateFrequency);\r\n\r\nfunction isClickWithinOscilloscope(event) {\r\n    const rect = oscilloscopeCanvas.getBoundingClientRect();\r\n    return (\r\n        event.clientX >= rect.left &&\r\n        event.clientX <= rect.right &&\r\n        event.clientY >= rect.top &&\r\n        event.clientY <= rect.bottom\r\n    );\r\n}\r\n\r\ndocument.addEventListener(\"mousedown\", (event) => {\r\n    if (isClickWithinOscilloscope(event)) {\r\n        const now = audioContext.currentTime;\r\n        gainNode.gain.cancelScheduledValues(now);\r\n        gainNode.gain.setValueAtTime(gainNode.gain.value, now);\r\n        gainNode.gain.linearRampToValueAtTime(volumeInput.value, now + 0.01);\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"mouseup\", (event) => {\r\n    if (isClickWithinOscilloscope(event)) {\r\n        const now = audioContext.currentTime;\r\n        gainNode.gain.cancelScheduledValues(now);\r\n        gainNode.gain.setValueAtTime(gainNode.gain.value, now);\r\n        gainNode.gain.linearRampToValueAtTime(0, now + 0.01);\r\n    }\r\n});\r\n\r\nif (navigator.requestMIDIAccess) {\r\n    navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);\r\n  } else {\r\n    updateStatus(\"Web MIDI API is not supported in your browser.\");\r\n  }\r\n  \r\n  function onMIDISuccess(midiAccess) {\r\n    const inputs = midiAccess.inputs.values();\r\n    for (const input of inputs) {\r\n      input.onmidimessage = onMIDIMessage;\r\n    }\r\n    updateStatus(\"MIDI controller connected!\");\r\n  }\r\n  \r\n  function onMIDIFailure() {\r\n    updateStatus(\"Failed to access your MIDI devices.\");\r\n  }\r\n  \r\n  function onMIDIMessage(event) {\r\n    const [command, note, velocity] = event.data;\r\n  \r\n    if (command === 144 && velocity > 0) {\r\n      playNote(note, velocity);\r\n    } else if (command === 128 || (command === 144 && velocity === 0)) {\r\n      stopNote(note);\r\n    }\r\n  }\r\n  \r\n  function playNote(note, velocity) {\r\n    // Use the Web Audio API to play the note\r\n    console.log(\"Note on:\", note, \"Velocity:\", velocity);\r\n    const now = audioContext.currentTime;\r\n    gainNode.gain.cancelScheduledValues(now);\r\n    gainNode.gain.setValueAtTime(gainNode.gain.value, now);\r\n    gainNode.gain.linearRampToValueAtTime(volumeInput.value, now + 0.01);\r\n  }\r\n  \r\n  function stopNote(note) {\r\n    // Use the Web Audio API to stop the note\r\n    console.log(\"Note off:\", note);\r\n    const now = audioContext.currentTime;\r\n    gainNode.gain.cancelScheduledValues(now);\r\n    gainNode.gain.setValueAtTime(gainNode.gain.value, now);\r\n    gainNode.gain.linearRampToValueAtTime(0, now + 0.01);\r\n  }\r\n  \r\n  function updateStatus(message) {\r\n    document.getElementById(\"status\").innerText = message;\r\n  }\r\n  "],"names":[],"version":3,"file":"synth.3cd4cf28.js.map","sourceRoot":"/__parcel_source_root/"}